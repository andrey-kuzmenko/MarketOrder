@using MarketOrder.Models
@*@model IEnumerable<ProductView>*@
@model ProductModel

@{
    ViewBag.Title = "Index";
}

@section Scripts {
    <script type="text/javascript" src="@Url.Content("~/Scripts/knockout-3.5.1.js")"></script>
    <script type="text/javascript">

        function AppViewModel() {
            var self = this;

            //TODO: implement here
        };

        $(document).ready(function () {
            var viewModel = new AppViewModel();
            ko.applyBindings(viewModel);
        });

    </script>

    <script type="text/javascript">

        function getProduct(data) {
            $.ajax({
                url: "/Product/Item",
                data: { id: data.value },
                type: "GET",
                dataType: "json",
                success: function (res) {
                    $('input[name=price]').val(res.data.Price).trigger('change');
                }
                //TODO: error handling
            });
        }

        function getTotal() {
            var total = parseFloat($('input[name=price]').val());
            var discount = parseFloat($('input[name=discount]').val());
            if (isNaN(discount))
                discount = 0.0;
            total -= discount;
            $('input[name=total]').val(total.toFixed(2));
        }

        $(':input').on('change', getTotal);

        $("form[name=productAdd]").submit(function (event) {
            event.preventDefault();

            var $form = $(this);

            $.ajax({
                url: $form.attr('action'),
                data: {
                    product: $('select[name=product]').children("option:selected").attr('value'),
                    total: $('input[name=total]').val()
                },
                type: $form.attr('method'),
                dataType: "json",
                success: function (res) {
                    alert('success');
                }
                //TODO: error handling
            });
        });
    </script>
}

@*
    <div class="jumbotron">
        <select onchange="getProduct(this);">
            <option style="display:none"></option>
            @foreach (var item in @Model)
            {
                <option value="@item.Id">@item.Name</option>
            }
        </select>
        <input type="number" value="0.00" min="0.00" name="price" readonly="readonly">
        <input type="number" value="0.00" min="0.00" name="discount" step="0.01" pattern="^\$\d{1,3}(,\d{3})*(\.\d+)?$">
        <input type="number" value="0.00" min="0.00" name="total" readonly="readonly">

        <button type="button" class="btn btn-primary">Add</button>
    </div>
*@

@*
    @using (Html.BeginForm("Product", "Add", FormMethod.Post))
    {
    <div class="form-group">
        <select onchange="getProduct(this);">
            <option style="display:none"></option>
            @foreach (var item in @Model.Products)
            {
                <option value="@item.Id">@item.Name</option>
            }
        </select>
    </div>
        <div class="form-group">
            <input type="number" class="form-control" value="0.00" min="0.00" name="price" readonly="readonly">
        </div>
        <div class="form-group">
            <input type="number" class="form-control" value="" min="0.00" name="discount" placeholder="Discount" step="0.01" pattern="^\$\d{1,3}(,\d{3})*(\.\d+)?$">
        </div>
        <div class="form-group">
            <input type="number" class="form-control" value="" min="0.00" name="total" placeholder="Total" readonly="readonly">
        </div>
        <button type="submit" class="btn btn-primary">Add</button>
    }
*@

<form name="productAdd" method="post" action="/Product/Add">
    <select onchange="getProduct(this);" name="product">
        <option style="display:none"></option>
        @foreach (var item in @Model.Products)
        {
            <option value="@item.Id">@item.Name</option>
        }
    </select>
    <input type="number" value="0.00" min="0.00" name="price" readonly="readonly">
    <input type="number" value="" min="0.00" name="discount" placeholder="Discount" step="0.01" pattern="^\$\d{1,3}(,\d{3})*(\.\d+)?$">
    <input type="number" value="" min="0.00" name="total" placeholder="Total" readonly="readonly">
    <button type="submit" class="btn btn-primary">Add</button>
</form>
