@using MarketOrder.Models
@*@model IEnumerable<ProductView>*@
@model ProductModel

@{
    ViewBag.Title = "Index";
}

@section Scripts {
    <script type="text/javascript" src="@Url.Content("~/Scripts/knockout-3.5.1.js")"></script> <!--TODO: Bundle-->
    <script type="text/javascript">

        function AppViewModel() {
            var self = this;

            //self.Products = ko.observableArray([]);

            //self.selectedProduct = ko.observable();
            //self.availableProducts = ko.observableArray([]);

            self.availableProducts = ko.observableArray([]);
            /*self.availableProducts = [
                { Id: 0, Name: "Car Organizer", Price: 10.99 },
                { Id: 1, Name: "LEGO Speed Champions", Price: 7.99 },
                { Id: 2, Name: "Panasonic HomeHawk Smart Home Security", Price: 99.99 }
            ];*/

            /*self.ProductVM = function (model) {
                var inner = this;

                inner.Id = model.Id;
                inner.Name = model.Name;
                inner.Price = model.Price;

                //ko.mapping.fromJS(model, {}, inner);

                //inner.Id = ko.observable(model.Id);
                //inner.Name = ko.observable(model.Name);
                //inner.Price = ko.observable(model.Price);
            };*/

            //TODO: ajax get model
            $.get("/Product/List", function (response) {
                self.availableProducts.push.apply(self.availableProducts, response.products);
            //    //self.availableProducts = ko.observableArray(response.products);
            //    //self.Products(new self.ProductVM(response.products));
            //    //self.products = ko.observableArray(data.data);
            //    //alert("Load was performed. Data:" + JSON.stringify(data));
            });

            /*
             * //TODO: map model
             * ko.mapping.fromJS(model, mapOptions, inner);
             */

            //self.price = ko.observable("9.99");
            //self.discount = ko.observable("0.00");
            //self.total = ko.computed(function () {
            //    var total = +self.price() - +self.discount();
            //    return total.toFixed(2);
            //});

            /*self.addSeat = function () {
                alert('Add');
            }*/
        };

        $(document).ready(function () {
            var viewModel = new AppViewModel();
            ko.applyBindings(viewModel);
        });

    </script>

    <script type="text/javascript">

        function getProduct(data) {
            $.ajax({
                url: "/Product/Item",
                data: { id: data.value },
                type: "GET",
                dataType: "json",
                success: function (res) {
                    $('input[name=price]').val(res.data.Price).trigger('change');
                }
                //TODO: error handling
            });
        }

        function getTotal() {
            var total = parseFloat($('input[name=price]').val());
            var discount = parseFloat($('input[name=discount]').val());
            if (isNaN(discount))
                discount = 0.0;
            total -= discount;
            $('input[name=total]').val(total.toFixed(2));
        }

        $(':input').on('change', getTotal);

        $("form[name=productAdd]").submit(function (event) {
            event.preventDefault();

            var $form = $(this);

            $.ajax({
                url: $form.attr('action'),
                data: {
                    product: $('select[name=product]').children("option:selected").attr('value'),
                    total: $('input[name=total]').val()
                },
                type: $form.attr('method'),
                dataType: "json",
                success: function (res) {
                    alert('success');
                }
                //TODO: error handling
            });
        });
    </script>
}

<tbody>
    <tr>
        <td>
            <select data-bind="options: $root.availableProducts, optionsText: 'Name'"></select>
        </td>
        <!--<td data-bind="text: price"></td>
                <td><input type="number" value="" min="0.00" data-bind="value: discount" placeholder="Discount" step="0.01" pattern="^\$\d{1,3}(,\d{3})*(\.\d+)?$"></td>
                <td data-bind="text: total"></td>-->
    </tr>
</tbody>
<!--<button data-bind="click: addSeat" class="btn btn-primary">Add</button>-->






@*
    <div class="jumbotron">
        <select onchange="getProduct(this);">
            <option style="display:none"></option>
            @foreach (var item in @Model)
            {
                <option value="@item.Id">@item.Name</option>
            }
        </select>
        <input type="number" value="0.00" min="0.00" name="price" readonly="readonly">
        <input type="number" value="0.00" min="0.00" name="discount" step="0.01" pattern="^\$\d{1,3}(,\d{3})*(\.\d+)?$">
        <input type="number" value="0.00" min="0.00" name="total" readonly="readonly">

        <button type="button" class="btn btn-primary">Add</button>
    </div>
*@

@*
    @using (Html.BeginForm("Product", "Add", FormMethod.Post))
    {
    <div class="form-group">
        <select onchange="getProduct(this);">
            <option style="display:none"></option>
            @foreach (var item in @Model.Products)
            {
                <option value="@item.Id">@item.Name</option>
            }
        </select>
    </div>
        <div class="form-group">
            <input type="number" class="form-control" value="0.00" min="0.00" name="price" readonly="readonly">
        </div>
        <div class="form-group">
            <input type="number" class="form-control" value="" min="0.00" name="discount" placeholder="Discount" step="0.01" pattern="^\$\d{1,3}(,\d{3})*(\.\d+)?$">
        </div>
        <div class="form-group">
            <input type="number" class="form-control" value="" min="0.00" name="total" placeholder="Total" readonly="readonly">
        </div>
        <button type="submit" class="btn btn-primary">Add</button>
    }
*@

@*
    <input type="text" class="form-control" id="td_location_code_name"
           data-bind="value: PickupInfo().LocationCodeName" readonly>
*@

@*
    <form name="productAdd" method="post" action="/Product/Add">
        <select onchange="getProduct(this);" name="product">
            <option style="display:none"></option>
            @foreach (var item in @Model.Products)
            {
                <option value="@item.Id">@item.Name</option>
            }
        </select>
        <input type="number" value="0.00" min="0.00" name="price" readonly="readonly">
        <input type="number" value="" min="0.00" name="discount" placeholder="Discount" step="0.01" pattern="^\$\d{1,3}(,\d{3})*(\.\d+)?$">
        <input type="number" value="" min="0.00" name="total" placeholder="Total" readonly="readonly">
        <button type="submit" class="btn btn-primary">Add</button>
    </form>
*@
